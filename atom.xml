<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jocelyn&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-11T03:34:50.541Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Hui Jiang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git 的基本操作入门 01 - 建立本地仓库</title>
    <link href="http://yoursite.com/2018/04/11/Git-%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E5%85%A5%E9%97%A8-01-%E5%BB%BA%E7%AB%8B%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93/"/>
    <id>http://yoursite.com/2018/04/11/Git-的基本操作入门-01-建立本地仓库/</id>
    <published>2018-04-11T02:22:11.000Z</published>
    <updated>2018-04-11T03:34:50.541Z</updated>
    
    <content type="html"><![CDATA[<p><strong><font color="#996633">这是一个简单粗暴的教程，不深入探究git内部原理，旨在让初学者尽快上手git</font></strong></p><p><strong>Git 粗暴介绍</strong></p><blockquote><p> Git 就是一个版本控制系统<strong>(version control system)</strong>。Git 就是记录了我们不同版本的代码,便于我们管理。</p><p> <strong>仓库 (repository) 就是存放代码的地方。</strong> 我们为不同的项目建立不同的仓库。Git里存放的是我们所有的仓库。</p><p>我们的代码要不断修改，当我们每次有了较大幅度的改动后，就可以把代码放入仓库中<strong>确认 (commit)</strong>一次。<strong>commit可以理解为：“我确定了，我的代码现在就长这个样子。” </strong></p><p>Git 最可爱的一点是，它可以和<strong>远程仓库 (remote)</strong>沟通。我们在自己的电脑上拥有的是<strong>本地仓库(local repository)</strong>。<strong>远程仓库是指托管在网络上的项目仓库，可以有很多个, 比如Github上的仓库。它们的存在是为了多人协作。</strong></p><p><strong>为Git的可爱举个栗子</strong>🌰：<br>协作的笨办法是大家写完代码在qq上互相发送压缩文件😂。Git提供的解决方案就是，大家各自写好，然后一起<strong>推送(push)</strong>到远程仓库去。然后通过<strong>融合分支(merge branch)</strong>把代码安全地融合在一起。</p></blockquote><hr><p><strong>来，上手git！</strong></p><p><strong>第一步：为你的项目建立一个本地仓库 </strong><br>1.<storng>为项目建立一个文件夹</storng><br><img src="file.png" alt="new a file"></p><p>小技巧：你可以在终端打cd 然后把要打开的文件拖拽到终端里。😂就不用自己敲路径了。</p><ol start="2"><li><strong>从终端打开文件夹</strong></li><li><strong>完成下列操作</strong><br><1> 初始化命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure></1></li></ol><p><img src="init.png" alt="init"></p><p><strong>意思是：我要给文件建立git仓库啦</strong></p><p><2> 查看此刻文件状态<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure></2></p><p><img src="status.png" alt="status"></p><p> 此刻，提示告诉我们文件index.html还没被放入仓库。<br>后文第二部分有详细介绍这些术语的含义，暂时不用担心看不懂untracked。</p><p> 这个命令你可以随时用，多次用。<br> <strong>意思是：我要看看此刻文件夹里文件们的状态，它们是被确认记录(committed)好了呢，还是暂时存着(staged)等我确认呢，还是有修改的了但我还没确认(modified)。</strong><br> 根据这条命令后的状态反馈，我们可以决定下一步该做什么。</p><p><3> 添加文件到仓库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add &lt;此处是文件名&gt;</span><br></pre></td></tr></table></figure></3></p><p> 一般我们新建好的文件，还没被添加到仓库去。所以你会看到图上的内容，提示我们添加文件。<br> <strong>小技巧：添加所有文件</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add -A</span><br></pre></td></tr></table></figure></p><p><img src="add.png" alt="add"></p><p> <strong>这条命令意思就是：我要把文件添加到仓库了。</strong></p><p><4>终于到了最重要的一步，确认。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &quot;这里写你本次操作的记录&quot;</span><br><span class="line"></span><br><span class="line">//我们是第一次操作所以可以写成如下：</span><br><span class="line"></span><br><span class="line">$ git commit -m &quot;initial commits&quot;</span><br></pre></td></tr></table></figure></4></p><p><img src="commit.png" alt="commit"></p><p> 这条就是确认命令。<br> <strong>此刻意思是：我确定刚刚所添加的文件都需要追踪记录。</strong><br> 对应不同操作，<strong>它的意思就是，我确认我所做的更改。</strong></p><p><strong>到这一步我们已经为项目建好了本地仓库🎉，并且成功把文件放入了仓库中追踪保存。以后我们修改了文件，git都会记录下来。</strong></p><ol start="4"><li>完成了上述一些列操作，可以查看所有commits</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$git log</span><br></pre></td></tr></table></figure><p><strong>可以看到所有的commits 记录。最新的commit在最上边。</strong></p><hr><p></p><h4> 来，了解下文件的不同状态！</h4><br>如果每次输入git status后终端返回的一大堆术语让你头疼，那么我们就来了解一下这些术语的意思。<p></p><p><code>staged</code>:  files are already to be committed</p><p><strong>意思：文件已经添加到仓库了，等待确认。</strong><br>所以下一步，我们需要git commit -m “你的记录语言” 操作</p><p><code>upstaged</code>: files with changes that have not been committed</p><p><strong>意思：有些文件修改了，还没确认。</strong><br>所以下一步，我们需要git add “文件名”，先把文件添到仓库，再去确认。</p><p><code>untracked</code>: files are not tracked by Git yet. (indicates a new file)</p><p><strong>一般新文件会出现这个状态，意思是，还没添加到仓库。</strong><br>所以下一步，我们需要git add ”文件名”</p><p><code>deleted</code>: files have been deleted and is waiting to be removed from Git<br><strong>有些文件被删除了，等待着被移除仓库。</strong><br>所以下一步，我们需要git rm “文件名”</p><hr><p></p><h4> 总结：</h4><p></p><ul><li>git init //初始化仓库</li><li>git status //查看文件状态</li><li>git add “filename” //(加完以后git status查看一下也可以) //把文件加入仓库</li><li>git commit -m “comments”  //确认更改，写好记录。</li></ul><p><strong>这是我的第一篇技术博客。希望对大家有帮助 😊，我自己也是还是一个小白，还在探索和学习的路上。下一篇博客会讲Git连接远程仓库。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;font color=&quot;#996633&quot;&gt;这是一个简单粗暴的教程，不深入探究git内部原理，旨在让初学者尽快上手git&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Git 粗暴介绍&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/03/27/hello-world/"/>
    <id>http://yoursite.com/2018/03/27/hello-world/</id>
    <published>2018-03-27T10:21:35.631Z</published>
    <updated>2018-03-27T10:21:35.631Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
